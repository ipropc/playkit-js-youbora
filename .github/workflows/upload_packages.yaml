name: Player And Plugin Release Version QA
on:
  workflow_call:
    inputs:
      yarn-run-to-execute:
        description: "list of package.json scripts - example: 'eslint flow test'"
        required: true
        type: string
      npm-registry-url:
        description: "npm registry url - example: 'https://kalturaa.jfrog.io/artifactory/api/npm/dor-test-nodejs-virtual/'"
        required: true
        type: string

jobs:
  release-version-qa:
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [ 17.x ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Node.js version ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: ${{ inputs.npm-registry-url }}
          always-auth: true
      - name: Yarn install
        run: yarn install
      - name: Yarn run ${{ inputs.yarn-run-to-execute }}
        run: |
          git config --global user.email "ovp.cp@kaltura.com"
          git config --global user.name "ovp-github-actions"
          for command in ${{ inputs.yarn-run-to-execute }}; do
            yarn run $command
          done
      - name:
        run: |
          sha=$(echo "${GITHUB_SHA::7}")
          currentVersion=$(npx -c 'echo "$npm_package_version"')
          newVersion="${currentVersion}-${sha}"
          echo "New version ${newVersion}"
          sed -iE "s/${currentVersion}/${newVersion}/g" package.json
          sed -iE "s/${currentVersion}/${newVersion}/g" CHANGELOG.md
          rm package.jsonE
          rm CHANGELOG.mdE
      - name: Yarn run build
        run: yarn run build
        env:
          NODE_OPTIONS: "--openssl-legacy-provider"
      - run: echo "_auth = ${{ secrets.NPM_JFROG_TOKEN }}" >> ${NPM_CONFIG_USERCONFIG}
      - run: cat ${NPM_CONFIG_USERCONFIG}
      - run: yarn publish

