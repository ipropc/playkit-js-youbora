name: Upload to s3
on:
  workflow_call:
    secrets:
      CENTRAL_ACCOUNT_ID:
        required: true
      S3_BUCKET_APPS:
        required: true
    inputs:
      aws-secret-central:
        description: "secret in central that include all the account ids"
        required: true
        type: string

jobs:
  get-accounts:
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [ 17.x ]
    runs-on: ${{ matrix.os }}
    permissions:
      id-token: write
      contents: read
    outputs:
      accounts: ${{ steps.accounts.outputs.accounts }}
    steps:
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.CENTRAL_ACCOUNT_ID }}:role/dor-test-oidc-github-actions
          role-session-name: githubAction
          aws-region: "us-east-1"
      - name: List s3
        id: accounts
        run: |
          aws_envs=$(aws secretsmanager get-secret-value --secret-id  arn:aws:secretsmanager:us-east-1:${{ secrets.CENTRAL_ACCOUNT_ID }}:secret:dor-test-github-actions-Q3jQq1 --query SecretString --output text | jq -c)
          accounts=$(echo $aws_envs | jq -c '.[]' | while read i; do jq -n --arg env "$(jq -r '.env' <<< "$i")" '{"env": $env, "os": "ubuntu-latest", "node-version": "17.x"}' ; done | jq -s -c)
          echo $accounts
          echo "accounts={\"include\":$accounts}" >> $GITHUB_OUTPUT
  upload-to-s3:
    needs: get-accounts
    strategy:
      matrix: ${{fromJSON(needs.get-accounts.outputs.accounts)}}
    runs-on: ${{ matrix.os }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Node.js version ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.CENTRAL_ACCOUNT_ID }}:role/dor-test-oidc-github-actions
          role-session-name: githubAction
          aws-region: "us-east-1"
      - name: List s3
        id: specific_account
        run: |
          aws_envs=$(aws secretsmanager get-secret-value --secret-id  arn:aws:secretsmanager:us-east-1:${{ secrets.CENTRAL_ACCOUNT_ID }}:secret:dor-test-github-actions-Q3jQq1 --query SecretString --output text | jq -c)
          echo $aws_envs | jq -c '.[]' | while read i; do account_id=$(jq -r '.account_id' <<< "$i"); echo "::add-mask::$account_id"; done
          specific_account=$(echo $aws_envs | jq -c '.[] | select(.env | contains("${{ matrix.env }}"))')
          echo "specific_account=$specific_account" >> $GITHUB_OUTPUT
      - name: Get account id
        id: account_id
        run: |
          account_id=$(echo '${{ steps.specific_account.outputs.specific_account }}' | jq '.account_id')
          echo "account_id=$account_id" >> $GITHUB_OUTPUT
      - name: Get region
        id: region
        run: |
          region=$(echo '${{ steps.specific_account.outputs.specific_account }}' | jq '.region')
          echo "region=$region" >> $GITHUB_OUTPUT
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ steps.account_id.outputs.account_id }}:role/nvd1-kalt-ovp-apps-role
          role-session-name: ${{ matrix.env }}
          aws-region: \"${{ steps.region.outputs.region }}\"
      - name: S3 list
        run: |
          aws s3 ls s3://nvd1-${{ secrets.S3_BUCKET_APPS }}/



